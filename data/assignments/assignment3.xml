<?xml version="1.0" encoding="UTF-8"?>
<!--
Assignment 3 - Finished Webapp
-->
<lab status="beta">
 
    <slide title="Overall Assignment Goals" layout="normal">
        <p>The purpose of assignment 3 is to complete your webapp project,
            per the specifications in this document.</p>
        <p>We will be adding some league process and presentation,
            and incorporating your game outcome prediction on the homepage.</p> 
    </slide>

    <slide title="FAQ? Revisions?" layout="normal">
        <p>If assignment details need clarifying, such changes will
            be made in this slide deck, and a note added to this page.</p>  
        <ul>
            <li></li>
        </ul>

    </slide>

    <slide title="Submission" layout="normal">
        <p>Submit a readme to the D2L assignment dropbox. 
            This readme should have a link to your github repository.</p>
        <p>I will be following the same process as for assignment 2, namely marking
            the "master" branch of your repository, and expecting that your
            database settings will work "out of the box" on my system - your
            local settings would be in application/config/development, which you
            remembered to "gitignore" so that I would not see them.</p>
        <p>I should not have to remind you about case senitivity issues
            or hard-coded filepaths.</p>
        <p>Due: Sunday, Dec 6, 23:59 PST</p>
    </slide>

    <slide title="Evaluation" layout="normal">
        <p>Assignments will be evaluated out of 20, according to the following
            breakdown, which shows the relative importance or complexity
            of the gradable items:        </p>
        <div class="left">
            <ul>
                <li>Predictions (5)</li>
                <li>League data &amp; presentation (5)</li>
                <li>League history &amp; update (5)</li>
            </ul>
        </div>
        <div class="right">
            <ul>
                <li>Works properly? (3)</li>
                <li>Aesthetics &amp; consistency (1)</li>
                <li>Comments &amp; programming style (1)</li>
            </ul>
        </div>
    </slide>

    <slide title="PREDICTIONS" layout="normal">
        <p>To your homepage, add a prediction "box", with a "form" to select
            an oppopent, and an empty div to present the results of your
            prediction.</p>
        <p>The "form" should contain a dropdown with the names of all league teams 
            except yours, alphabetically. The value of each selection should be 
            the 3-letter code for that team. The submit button should be
            implemented using AJAX, sending a request to an appropriate handler
            method, and setting the content of the empty div you provided,
            from the result.</p>
        <p>Your handler will need to validate the requested opponent code,
            and return either an error message or the prediction, nicely
            formatted as an HTML view fragment.</p>
    </slide>

    <slide title="PREDICTION FORMULA" layout="normal">
        <p>The prediction formula: each team should score their average
            so far, with adjustments for the trends indicated over their
            last five games in general and against the selected opponent.</p>
        <p>This could be simply implemented as <r/>
            <code>70% * (overall average) +
                20% * (last 5 games average) + 10% * (average of last 5 games against 
                this opponent).</code>
        </p>
        <p>A more defensible formula, if you wanted to use this for fantasy
            football, would be more like<br/>
            <code>(overall average) +
                20% * (trend over the last 5 games) + 10% * (trend over last 5 games against 
                this opponent).</code>
        </p>
        <p>The HTML fragment that displays the prediction should include
            an explanation, i.e. the data going into the predicted outcome.</p>
    </slide>

    <slide title="LEAGUE DATA" layout="normal">
        <p>Your league presentation page should provide for 3 layouts: league
            (single table), conference (teams within each league), and division
            (teams in divisions by conference). Use the NFL standings page as an example.</p>
        <p>The presentation order within a group should be flexible too: by city,
            by team, or by standing (net points)</p>
        <p>Finally, you should provide for calculating this from the data you
            have stored in your RDB table(s), *or* from the XML document
            you can retrieve from <code>nfl.jlparry.com/standings</code> (which is not live
            yet).</p>
        <p>So, three selections, then proceed to presentation.</p>
    </slide>

    <slide title="LEAGUE HISTORY" layout="normal">
        <p>Your webapp will need to pull historical scores from 
            <code>nfl.jlparry.com/scores/yyyymmdd</code>,
            using XML-RPC.</p>
        <p>You should provide a link or button, probably in your navbar, to
            trigger this.</p>
        <p>The data will need to be interpreted and converted into a format
            usable by your webapp. I suggest a scores history table, with
            team code, date, score, and opponent team code as columns. The first two 
            would comprise a composite primary key.</p>
        <p>You will need to keep track of the date your history is current until, as
            the scores server needs to be told the starting date for data to extract for you.</p>
    </slide>

    <slide title="OTHER CONSIDERATIONS" layout="normal">

        <p> 
            <strong>Works properly.</strong>
            This basically refers to your webapp working as a webapp should.
            Things that would cost marks here include broken hyperlinks,
            broken images, CSS not loading properly,
            and of course BOOMs.</p>
    
        <p> 
            <strong>Aesthetics &amp; Consistency.</strong>
            Your webapp pieces should look and behave seamlessly.
            The different pages should have similar or compatible
            styles. Nothing should look like a rAnSom note!</p>

        <p> 
            <strong>Comments &amp; programming style.</strong>
            You are programmers, and you want to be professional. Code like it.
            That means clearly written and formatted code, properly commented.
            Your views should have no PHP in them, apart from possibly comments.</p>
        <p>Remember the golden rules!!!</p>
    </slide>
</lab>
