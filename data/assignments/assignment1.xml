<?xml version="1.0" encoding="UTF-8"?>
<!--
Assignment 1 - Basic Webapp
-->
<lab status="beta">
    <!-- Activity metadata ... override anything from the course or organizer -->
    
    <!-- The meat of the presentation -->
    <slide title="Overall Assignment Goals" layout="normal">
        <p>The purpose of the assignments, collectively, is to let you
            apply the techniques from the lessons,
            tutorials and labs.</p>
        <p>In teams of up to four, you will be building a small but complete 
            webapp, in our case to predict 
            <a href="http://www.nfl.com/" target="_blank">NFL</a> game outcomes.
            This will be done in three stages, with specific expectations for
            each stage. Each stage will be a separate assignment.</p> 
        <p>The framework and a number of supporting technologies 
            have been pre-decided. The techniques for applying these 
            will be the subject of upcoming lessons and labs. </p>
    </slide>

    <slide title="Revisions?" layout="normal">
        <p>If assignment details need clarifying, such changes will
            be made in this slide deck, and a note added to this page.</p>  
        <ul>
            <li>
                <a href="#{tag1}">Planning</a>
            </li>
            <li>
                <a href="#{tag2}">Design</a>
            </li>
            <li>
                <a href="#{tag3}">Process</a>
            </li>
            <li>
                <a href="#{tag4}">FAQ</a>
            </li>
        </ul>

    </slide>

    <slide title="Goals for This Assignment" layout="normal" tag="tag1">
        <p>The purpose of this assignment 1 is to get the basic pieces 
            of your webapp in the 
            correct places expected for a CodeIgniter webapp.</p>
        <p>This may sound suspiciously similar to lab #2! Hmmmmm.</p> 
    </slide>

    <slide title="Your Webapp" layout="normal">
        <p>Your webapp doesn't have to be "world-class" or even necessarily "real",
            but it needs sufficient complexity to be dynamic, personalized
            and scaleable/integrated.</p>
        <p>Practically speaking, this means that your data will eventually come
            partly from a database with at least two tables, and partly
            from a rich XML data structure, which might be stored as separate
            XML documents, or which might be stored as a column in one of your
            RDB tables.</p>
    </slide>

    <slide title="Webapp Sitemap" layout="normal">
        <p>Your homepage will be a kind of dashboard, purely
            informational for now (a bit about the team, perhaps). 
            Prompting for parameters to use in game
            prediction will come in the next assignment. </p>
        <p>You will need three pages in the site now: one showing
            your team roster, one showing the league and its teams,
            and an "about" page.</p>
        <p>Your "about" page should clearly indicate that this is
            an academic or learning project, and that any use
            of names and/or media falls under the fair use guidelines.</p>
    </slide>

    <slide title="Your Data" layout="normal" tag="tag2">
        <p>You need two models at this point - one for your team roster
            and one for the league composition. Metadata about your team
            would be more properly stored as configuration parameters.</p>
        <p>On the NFL standings page, you will notice 2 or 3 letter codes
        as you mouse over the team names in the left column, eg MIA for the Miami
        Dolphins. I suggest using those codes as the key for each team,
        as the scores will be provided using them.</p>
        <p>Keep your data plan/design simple!</p>            
    </slide>

    <slide title="Your Presentation" layout="normal">
        <p>Your webapp will be evaluated on its functionality, not on how
            good it looks. It is better to have a consistent design, with
            elements appropriate to the purpose, than it is to have
            a pretty design.</p>
        <p>Your job is to design and implement the back-end of such a site.
            That doesn't mean your site's appearance should be ugly or
            cringe-worthy - there are many freely available website
            templates online.</p>
            <p>Feel free to use any CSS/javascript frameworks you
            are familiar or comfortable with, subject to the constraints
            described next.</p>
    </slide>

    <slide title="Webapp Constraints" layout="normal">
        <p>There shall be no PHP in your view source files.</p>
        <p>You are welcome to use an third party templating engine,
        but without PHP in your view.</p>
        <p>Remember the golden rules, especially case sensitivity!</p>
    </slide>
    

    <slide title="Your Usecases" layout="normal">
        <p>Your webapp should have two usecases at this point.</p>
        <p>First, show your team's roster, with mugshots and a bit
        of data for each player (name, number, position, ...).</p>
        <p>Second, display the league data in a sensible format,
        organized by group within conference. </p>
    </slide>
    
   <slide title="Webapp Stages" layout="normal" tag="tag3">
        <p>Your webapp will be built in three stages, each corresponding
            to an assignment.</p>
        <p>Stage 1: basic webapp. The pieces will be there, in the right place,
            but the data and interaction are largely bogus. You will find it
            easier to mock the data in this stage, rather than providing a "real"
            database.</p>
        <p>Stage 2: make the data "real", the prediction usecases functional, and add 
            maintenance.</p>            
        <p>Stage 3: Add the rich data and its handling, as well as 
            role-based access control.</p>
    </slide>

    <slide title="Process" layout="normal">
        <p>Create a github organization for your team, in which you
            will then create a shared repository for your project. This
            repository will be used for all three stages.</p>
        <p>Each team member should fork the project repo, and
            follow the gitflow workflow process for adding to or updating it.
            You may wish to give one team member maintainer responsibility
            for the repo, or you can all have it.</p>
        <p>I would expect comparable contributions from each team member,
            whether you measure that by quantity or quality. If one team
            member does the bulk of the work for a given assignment,
            they will get the bulk of the marks for that assignment!</p>
    </slide>

    <slide title="Submission" layout="normal">
        <p>Submit a readme to the D2L assignment dropbox for your team. 
            This readme should have a link to your github repository.</p>
        <p>Due: Sunday, Oct 4, 23:59 PST</p>
    </slide>

    <slide title="Evaluation" layout="normal">
        <p>Assignments will be evaluated out of 20, according to the following
            breakdown:        </p>
        <div class="left">
            <ul>
                <li>Controllers, home plus three (3)</li>
                <li>Models, with mock data (3)</li>
                <li>Views, template plus 3 layouts (3)</li>
            </ul>
        </div>
        <div class="right">
            <ul>
                <li>Appropriate &amp; consistent UI (2)</li>
                <li>Works properly? (3)</li>
                <li>Workflow process (3)</li>
                <li>Comments &amp; programming style (3)</li>
            </ul>
        </div>
    </slide>

    <slide title="Your Code" layout="normal">
        <p>You are programmers, and you want to be professional. Code like it.</p>
        <p>That means clearly written and formatted code, properly commented.</p>
        <p>Your views should have no PHP in them, apart from possibly comments.</p>
        <p>Remember the golden rules!!!</p>
    </slide>

    <slide title="Cautions" layout="normal">
        <p>Don't get carried away, spending days coming up with “perfect” design 
            or content, etc. </p>
        <p>This is a course assignment, not a job, and not an industry-sponsored 
            project. It is a vehicle to learn how to use CodeIgniter to
            build a simple webapp, incorporating good practices.</p>
    </slide>

    <slide title="F.A.Q." layout="normal" tag="tag4">
        <p>There are no questions yet, but I am sure there will be!</p>
    </slide>


</lab>
